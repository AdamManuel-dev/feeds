<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://AdamManuel-dev.github.io/feeds/all.xml</id>
    <title>Combined feed</title>
    <updated>2021-11-14T17:53:16.180Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <entry>
        <title type="html"><![CDATA[Rabia: Simplifying State-Machine Replication Through Randomization (SOSP'21) (Distributed Systems Blog)]]></title>
        <id>https://muratbuffalo.blogspot.com/2021/11/rabia-simplifying-state-machine.html</id>
        <link href="https://muratbuffalo.blogspot.com/2021/11/rabia-simplifying-state-machine.html"/>
        <updated>2021-11-03T03:17:00.000Z</updated>
        <content type="html"><![CDATA[This paper appeared in SOSP'21 . I took notes and screen-snapshots during the presentation of this paper, and decided to put together a summary of what I understood from it. The paper has a simple idea and a somewhat unexpected result. It will be interesting to dive deep and explore to the extent this idea can be applied in practice.&nbsp; Here is the idea. State-machine replication through Paxos , more accurately MultiPaxos, is commonly used in practice. (Yes, that includes state-machine replication through Raft, if I have to spell this out to the Rafters among us.) The MultiPaxos leader drives the protocol.  It is basically one round, phase-2 execution of "accept this!" "yes, boss" between the leader and followers, where phase3 commit can be piggybacked to phase-2 message. This is as simple and efficient as it gets. You can't beat it! Or can you? The paper argues that, although the happy path of MultiPaxos based state-machine replication is simple and efficient]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Log structured protocols in Delos (SOSP21) (Distributed Systems Blog)]]></title>
        <id>https://muratbuffalo.blogspot.com/2021/10/log-structured-protocols-in-delos-sosp21.html</id>
        <link href="https://muratbuffalo.blogspot.com/2021/10/log-structured-protocols-in-delos-sosp21.html"/>
        <updated>2021-10-30T00:52:00.000Z</updated>
        <content type="html"><![CDATA[This paper  picks up from where the "Virtual Consensus in Delos" paper finishes , and&nbsp; talks about using Delos to build control plane databases at Facebook. These are my notes from Mahesh's excellent conference presentation. These control plane databases at Facebook were required to support multiple APIs: some SQL, some key-value pairs, and some ZooKeeper namespaces. Each such API typically requires a separate database to be built. But implementing and operating even a single zero dependency control plane system is difficult. To cut this dilemma, they observe that these databases have a similar structure: a consensus protocol at the bottom, and a replicated state machine on top. A lot of that state machine uses generic logic that can be reused across different APIs. This implies that there is an hourglass architecture at work here, where Delos platform is the narrow waist. This paper focuses on protocols which allow us to layer multiple apis on this common Delos platform.]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[David G. Andersen AMA (SOSP Day 3) (Distributed Systems Blog)]]></title>
        <id>https://muratbuffalo.blogspot.com/2021/10/david-g-andersen-ama-sosp-day-3.html</id>
        <link href="https://muratbuffalo.blogspot.com/2021/10/david-g-andersen-ama-sosp-day-3.html"/>
        <updated>2021-10-29T14:25:00.000Z</updated>
        <content type="html"><![CDATA[Dave has broad research interests in computer systems in the networked environment. What do you think systems community should be working on but isn't getting enough attention? With the stuttering of Moore's law as we get into nanoscales, there is more need to extract performance from systems through integrated co-design of hardware and software. We need integrated work through the entire stack to make systems faster and more reliable. How do you pick research ideas/projects? I stumble on interesting questions. There is a lot of cross-fertilization going on between different areas I am working on. If everything else fails, once a year or so, I take a notebook, go for a walk, and write down my ideas. My two sabbaticals were also very fruitful for finding research ideas and projects. At Google, I worked with AI/ML people, which opened new horizons for me. What do you think about the future prospects of blockchain systems? Will there be a killer application, like ever? There are v]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jon Howell AMA at SOSP21 (Day 2) (Distributed Systems Blog)]]></title>
        <id>https://muratbuffalo.blogspot.com/2021/10/jon-howell-ama-at-sosp21-day-2.html</id>
        <link href="https://muratbuffalo.blogspot.com/2021/10/jon-howell-ama-at-sosp21-day-2.html"/>
        <updated>2021-10-28T13:14:00.000Z</updated>
        <content type="html"><![CDATA[&nbsp;There were several AMAs at SOSP21, where the attendees can ask questions. I really like Jon Howell 's AMA session. I asked two questions I was interested about learning.&nbsp;&nbsp; Why do you think verification is at a breakaway point now? What are the factors that make this the go-big moment? We are now figuring out how to make common problems cheap. Historically Coq proving was about being clever: do something not done before. Now we are focusing on how do we make the common stuff cheap. The Ironclad project  began when Rustan Leino  came to our team, and said I have a tool, let's use this tool. The Dafny demos were interesting to me. A red squiggly line showed a bug. When you give hint, the bug went away. It was a lightbulb moment. It took me extra line of code/explanation for me to get it. The verifier already got it. We had verification runouts in slicon valley,&nbsp; with tlc, tlaps and others. The verifier send back question mark, and we try to decode it, what we realize was, almost]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SOSP21 conference (Day 1) (Distributed Systems Blog)]]></title>
        <id>https://muratbuffalo.blogspot.com/2021/10/sosp-conference-day-1.html</id>
        <link href="https://muratbuffalo.blogspot.com/2021/10/sosp-conference-day-1.html"/>
        <updated>2021-10-28T12:59:00.000Z</updated>
        <content type="html"><![CDATA[SOSP, along with OSDI, is the premiere conference in computer systems. SOSP was held biannually; I had attended SOSP19 in person, and shared  notes  and paper summaries  from that.&nbsp; This year SOSP is virtual, which made it a lot easier to travel to. It is nice attending the conference from the convenience of your home. The experience is not too inferior to physical conference attending if you take the convenience factor into account.&nbsp; Here are some notes from SOSP21. If you find and interesting paper, you can dig in, because: All SOSP papers are available as open access All the presentations are also available on YouTube Opening The conference opened with announcements from program committee (PC) chairs. SOSP21 had 348 submissions from 2078 authors, resulting on avg 6 authors per paper. 54 out of 348 papers are accepted. Reviews were conducted by 64 PC members, who produced 1500+ reviews. The trend is clear, the number of submissions are growing steeply.&nbsp; Last year OSDI had announced i]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linearizability (Distributed Systems Blog)]]></title>
        <id>https://muratbuffalo.blogspot.com/2021/10/linearizability.html</id>
        <link href="https://muratbuffalo.blogspot.com/2021/10/linearizability.html"/>
        <updated>2021-10-07T02:02:00.000Z</updated>
        <content type="html"><![CDATA[Distributed/networked systems employ data replication to achieve availability and scalability. Consistency  is concerned with the question of what should happen if a client modifies some data items and concurrently another client reads or modifies the same items possibly at a different replica. Linearizability is a strong form of consistency. (That is why it is also called as strong-consistency.) For a system to satisfy linearizability,&nbsp; each operation must appear (from client perspective) to occur at an instantaneous point between its start time (when the client submits it) and finish time (when the client receives the response), and&nbsp; execution at these instantaneous points should form a valid sequential execution (i.e., it should be as if operations are executed one at a time ---without concurrency, like they are being executed by a single node)&nbsp; Let's simplify things further. In practice, consistency is often defined for systems that have two very specific operations: read and w]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Lightweight Formal Methods to Validate a Key-Value Storage Node in Amazon S3 (SOSP21) (Distributed Systems Blog)]]></title>
        <id>https://muratbuffalo.blogspot.com/2021/10/using-lightweight-formal-methods-to.html</id>
        <link href="https://muratbuffalo.blogspot.com/2021/10/using-lightweight-formal-methods-to.html"/>
        <updated>2021-10-02T23:01:00.000Z</updated>
        <content type="html"><![CDATA[This paper  comes from my colleagues at AWS S3 Automated Reasoning Group, detailing their experience applying lightweight formal methods to a new class of storage node developed for S3 storage backend. Lightweight formal methods emphasize automation and usability.  In this case, the approach involves three prongs: developing executable reference models as specifications, checking implementation conformance to those models, and building infrastructure to ensure the models remain accurate in the future. ShardStore ShardStore is a new append-only key-value storage node developed for AWS S3 backend. It is over 40K lines of Rust code. Shardstore is a log-structured merge tree (LSM tree) but with shard data stored outside the tree to reduce write amplification. ShardStore employs soft updates for avoiding the cost of redirecting writes through a write-ahead log while still being crash consistent. A soft updates implementation ensures that only writes whose dependencies are persisted are sent]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Book review: Fountainhead (Distributed Systems Blog)]]></title>
        <id>https://muratbuffalo.blogspot.com/2021/09/book-review-fountainhead.html</id>
        <link href="https://muratbuffalo.blogspot.com/2021/09/book-review-fountainhead.html"/>
        <updated>2021-09-28T02:33:00.000Z</updated>
        <content type="html"><![CDATA[I had been hearing a lot of negative comments about Fountainhead on Twitter. These comments seemed politically motivated, how the book is a dumb libertarian propaganda. I had to check the book out myself to see what the deal is.&nbsp; The book  started out well. I was surprised to see that, first this is a novel, and second this is an easy read. I was waiting an impenetrable intellectual literary text. The book turned out to readable and initially charming, even though it was written in 1940.&nbsp; The book felt like "The Goal" novel , communicating a concept/idea in story form. The main guy is this guy, Howard Roark, he is the best architect ever. Rather, he is the God of Architecture. He is architecture in flesh. He is like the best architect ever. The book is not at all subtle about this. He is 1000% dedicated to his craft, and he is the best ever, and he brings out his uncompromised gift in every building he designs. He is uncorruptable and willing to suffer for his art. The first]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Matchmaker Paxos: A Reconfigurable Consensus Protocol (Distributed Systems Blog)]]></title>
        <id>https://muratbuffalo.blogspot.com/2020/05/matchmaker-paxos-reconfigurable.html</id>
        <link href="https://muratbuffalo.blogspot.com/2020/05/matchmaker-paxos-reconfigurable.html"/>
        <updated>2021-08-28T11:13:00.000Z</updated>
        <content type="html"><![CDATA[Michael Whittaker , Joe Hellerstein's PhD student at UC Berkeley, has recently defended his PhD thesis on Compartmentalized Paxos . The thesis deconstructs Paxos and shows ways to reconstruct it to be more scalable by individually focusing on each component/role in Paxos. It is a simple but effective trick. Even after you learn the trick, you still keep getting surprised by how effective it is. When I say Michael defended his thesis, I am speaking loosely. Michael was not defensive about anything. He didn't have to be, his work spoke for him. Just watch his PhD presentation and you will understand what I mean. &nbsp;Michael has a great talent for explaining things simply. Unfortunately this is an underappreciated talent, especially in academia. This may make it look too easy and effortless, and like you didn't do sophisticated work. This dude did not even prepare presentation slides for his PhD thesis (the heresy!), and winged it on the fly by drawing his protocols on an iPad. H]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[There is plenty of room at the bottom (Distributed Systems Blog)]]></title>
        <id>https://muratbuffalo.blogspot.com/2021/08/there-is-plenty-of-room-at-bottom.html</id>
        <link href="https://muratbuffalo.blogspot.com/2021/08/there-is-plenty-of-room-at-bottom.html"/>
        <updated>2021-08-17T13:35:00.000Z</updated>
        <content type="html"><![CDATA[This is a pun on the saying "there is always room at the top". This is also the title of a famous Feynman lecture from 1959 , where he made a case for nanotechnology.&nbsp; In this post, I will try to argue that there is plenty of room at the bottom for distributed algorithms. Most work on distributed algorithms are done at a high-level abstraction plane. These high level solutions do not transfer well to the implementation level, and this opens a lot of space to explore at the implementation level. But this is not just an opportunistic argument. It is imperative to target the implementation level with our distributed algorithms work, otherwise they remain as theoretical, unused, inapplicable.&nbsp; Let me try to demonstrate using consensus protocols as examples. Someone else can make the same case using another subdomain. Be mindful of what is swept under the rug What is succinct at the high level could be very hard to implement and get right at the low level.  Paxos seems simple , bu]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2021-11-08: BugSwarm: Mining and Continuously Growing a Dataset of Reproducible Failures and Fixes (Most Recent It Will Never Work in Theory)]]></title>
        <id>https://neverworkintheory.org/2021/11/08/my-kingdom-for-a-dataset.html</id>
        <link href="https://neverworkintheory.org/2021/11/08/my-kingdom-for-a-dataset.html"/>
        <updated>2021-11-10T17:49:50.163Z</updated>
        <content type="html"><![CDATA[A dataset! A dataset! My kingdom for a dataset! The sentiment behind the King Richard's famous cries is perhaps shared, in a different context, by contemporary researchers who have their sights set on developing bug detection or automatic repair systems. Luckily Tomassi2019 have put shovels in the ground and made impressive headway towards a hyper-scale, real-world, current, and reproducible dataset of bugs and their corresponding fixes. The progress takes the form of BugSwarm, a continuous integration (CI) harvesting toolkit that aims to take failed CI pipelines and turn them into data samples. Before BugSwarm, the datasets that were available for...]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[A New Theory for Systems That Defy Newton’s Third Law (Quanta: Mathematics)]]></title>
        <id>https://www.quantamagazine.org/a-new-theory-for-systems-that-defy-newtons-third-law-20211111/</id>
        <link href="https://www.quantamagazine.org/a-new-theory-for-systems-that-defy-newtons-third-law-20211111/"/>
        <updated>2021-11-11T17:55:39.984Z</updated>
        <content type="html"><![CDATA[In nonreciprocal systems, where Newton’s third law falls apart, “exceptional points” are helping researchers understand phase transitions and possibly other phenomena.]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mathematicians Find Structure in Biased Polynomials (Quanta: Mathematics)]]></title>
        <id>https://www.quantamagazine.org/mathematicians-find-structure-in-biased-polynomials-20211109/</id>
        <link href="https://www.quantamagazine.org/mathematicians-find-structure-in-biased-polynomials-20211109/"/>
        <updated>2021-11-09T18:05:46.439Z</updated>
        <content type="html"><![CDATA[New work establishes a tighter connection between the rank of a polynomial and the extent to which it favors particular outputs.]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Surprising Limits Discovered in Quest for Optimal Solutions (Quanta: Mathematics)]]></title>
        <id>https://www.quantamagazine.org/surprising-limits-discovered-in-quest-for-optimal-solutions-20211101/</id>
        <link href="https://www.quantamagazine.org/surprising-limits-discovered-in-quest-for-optimal-solutions-20211101/"/>
        <updated>2021-11-01T17:55:20.380Z</updated>
        <content type="html"><![CDATA[Algorithms that zero in on solutions to optimization problems are the beating heart of machine reasoning. New results reveal surprising limits.]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Where Transcendental Numbers Hide in Everyday Math (Quanta: Mathematics)]]></title>
        <id>https://www.quantamagazine.org/where-transcendental-numbers-hide-in-everyday-math-20211027/</id>
        <link href="https://www.quantamagazine.org/where-transcendental-numbers-hide-in-everyday-math-20211027/"/>
        <updated>2021-10-27T17:43:17.556Z</updated>
        <content type="html"><![CDATA[The transcendental number <em>π</em> is as familiar as it is ubiquitous, but how does Euler’s number <em>e</em> transcend the ordinary?]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Surprising Limits Discovered in Quest for Optimal Solutions (Quanta: Computer Science)]]></title>
        <id>https://www.quantamagazine.org/surprising-limits-discovered-in-quest-for-optimal-solutions-20211101/</id>
        <link href="https://www.quantamagazine.org/surprising-limits-discovered-in-quest-for-optimal-solutions-20211101/"/>
        <updated>2021-11-01T17:55:20.380Z</updated>
        <content type="html"><![CDATA[Algorithms that zero in on solutions to optimization problems are the beating heart of machine reasoning. New results reveal surprising limits.]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Uselessness of Useful Knowledge (Quanta: Computer Science)]]></title>
        <id>https://www.quantamagazine.org/science-has-entered-a-new-era-of-alchemy-good-20211020/</id>
        <link href="https://www.quantamagazine.org/science-has-entered-a-new-era-of-alchemy-good-20211020/"/>
        <updated>2021-10-23T09:20:01.063Z</updated>
        <content type="html"><![CDATA[Today’s powerful but little-understood artificial intelligence breakthroughs echo past examples of unexpected scientific progress.]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Neuron Bursts Can Mimic Famous AI Learning Strategy (Quanta: Computer Science)]]></title>
        <id>https://www.quantamagazine.org/brain-bursts-can-mimic-famous-ai-learning-strategy-20211018/</id>
        <link href="https://www.quantamagazine.org/brain-bursts-can-mimic-famous-ai-learning-strategy-20211018/"/>
        <updated>2021-10-23T09:20:01.064Z</updated>
        <content type="html"><![CDATA[A new model of learning centers on bursts of neural activity that act as teaching signals — approximating backpropagation, the algorithm behind learning in AI.]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[A New Link to an Old Model Could Crack the Mystery of Deep Learning (Quanta: Computer Science)]]></title>
        <id>https://www.quantamagazine.org/a-new-link-to-an-old-model-could-crack-the-mystery-of-deep-learning-20211011/</id>
        <link href="https://www.quantamagazine.org/a-new-link-to-an-old-model-could-crack-the-mystery-of-deep-learning-20211011/"/>
        <updated>2021-10-23T09:20:01.066Z</updated>
        <content type="html"><![CDATA[To help them explain the shocking success of deep neural networks, researchers are turning to older but better-understood models of machine learning.]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[A New Theory for Systems That Defy Newton’s Third Law (Quanta: Physics)]]></title>
        <id>https://www.quantamagazine.org/a-new-theory-for-systems-that-defy-newtons-third-law-20211111/</id>
        <link href="https://www.quantamagazine.org/a-new-theory-for-systems-that-defy-newtons-third-law-20211111/"/>
        <updated>2021-11-11T17:55:39.984Z</updated>
        <content type="html"><![CDATA[In nonreciprocal systems, where Newton’s third law falls apart, “exceptional points” are helping researchers understand phase transitions and possibly other phenomena.]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Laws of Logic Lead to New Restrictions on the Big Bang (Quanta: Physics)]]></title>
        <id>https://www.quantamagazine.org/cosmologists-close-in-on-logical-laws-for-the-big-bang-20211110/</id>
        <link href="https://www.quantamagazine.org/cosmologists-close-in-on-logical-laws-for-the-big-bang-20211110/"/>
        <updated>2021-11-10T17:50:16.574Z</updated>
        <content type="html"><![CDATA[Physicists are translating commonsense principles into strict mathematical constraints on how our universe must have behaved at the beginning of time.]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Researchers Revise Recipe for Building a Rocky Planet Like Earth (Quanta: Physics)]]></title>
        <id>https://www.quantamagazine.org/scientists-debate-if-cosmic-pebbles-create-rocky-planets-like-earth-20211103/</id>
        <link href="https://www.quantamagazine.org/scientists-debate-if-cosmic-pebbles-create-rocky-planets-like-earth-20211103/"/>
        <updated>2021-11-03T17:54:51.286Z</updated>
        <content type="html"><![CDATA[Over the past decade, researchers have completely rewritten the story of how gas giants such as Jupiter and Saturn form. They’re now debating whether the same process might hold for Earth.]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is the Great Neutrino Puzzle Pointing to Multiple Missing Particles? (Quanta: Physics)]]></title>
        <id>https://www.quantamagazine.org/neutrino-puzzles-point-to-the-possibility-of-multiple-missing-particles-20211028/</id>
        <link href="https://www.quantamagazine.org/neutrino-puzzles-point-to-the-possibility-of-multiple-missing-particles-20211028/"/>
        <updated>2021-10-28T18:02:40.437Z</updated>
        <content type="html"><![CDATA[Years of conflicting neutrino measurements have led physicists to propose a “dark sector” of invisible particles — one that could simultaneously explain dark matter, the puzzling expansion of the universe, and other mysteries.]]></content>
    </entry>
</feed>