{"title":"Combined feed","url":"https://AdamManuel-dev.github.io/feeds/all.xml","elements":[{"title":"David G. Andersen AMA (SOSP Day 3) (Distributed Systems Blog)","contents":"Dave has broad research interests in computer systems in the networked environment. What do you think systems community should be working on but isn't getting enough attention? With the stuttering of Moore's law as we get into nanoscales, there is more need to extract performance from systems through integrated co-design of hardware and software. We need integrated work through the entire stack to make systems faster and more reliable. How do you pick research ideas/projects? I stumble on interesting questions. There is a lot of cross-fertilization going on between different areas I am working on. If everything else fails, once a year or so, I take a notebook, go for a walk, and write down my ideas. My two sabbaticals were also very fruitful for finding research ideas and projects. At Google, I worked with AI/ML people, which opened new horizons for me. What do you think about the future prospects of blockchain systems? Will there be a killer application, like ever? There are v","link":"https://muratbuffalo.blogspot.com/2021/10/david-g-andersen-ama-sosp-day-3.html","retrieved":1635517500000},{"title":"Jon Howell AMA at SOSP21 (Day 2) (Distributed Systems Blog)","contents":"&nbsp;There were several AMAs at SOSP21, where the attendees can ask questions. I really like Jon Howell 's AMA session. I asked two questions I was interested about learning.&nbsp;&nbsp; Why do you think verification is at a breakaway point now? What are the factors that make this the go-big moment? We are now figuring out how to make common problems cheap. Historically Coq proving was about being clever: do something not done before. Now we are focusing on how do we make the common stuff cheap. The Ironclad project  began when Rustan Leino  came to our team, and said I have a tool, let's use this tool. The Dafny demos were interesting to me. A red squiggly line showed a bug. When you give hint, the bug went away. It was a lightbulb moment. It took me extra line of code/explanation for me to get it. The verifier already got it. We had verification runouts in slicon valley,&nbsp; with tlc, tlaps and others. The verifier send back question mark, and we try to decode it, what we realize was, almost","link":"https://muratbuffalo.blogspot.com/2021/10/jon-howell-ama-at-sosp21-day-2.html","retrieved":1635426840000},{"title":"SOSP21 conference (Day 1) (Distributed Systems Blog)","contents":"SOSP, along with OSDI, is the premiere conference in computer systems. SOSP was held biannually; I had attended SOSP19 in person, and shared  notes  and paper summaries  from that.&nbsp; This year SOSP is virtual, which made it a lot easier to travel to. It is nice attending the conference from the convenience of your home. The experience is not too inferior to physical conference attending if you take the convenience factor into account.&nbsp; Here are some notes from SOSP21. If you find and interesting paper, you can dig in, because: All SOSP papers are available as open access All the presentations are also available on YouTube Opening The conference opened with announcements from program committee (PC) chairs. SOSP21 had 348 submissions from 2078 authors, resulting on avg 6 authors per paper. 54 out of 348 papers are accepted. Reviews were conducted by 64 PC members, who produced 1500+ reviews. The trend is clear, the number of submissions are growing steeply.&nbsp; Last year OSDI had announced i","link":"https://muratbuffalo.blogspot.com/2021/10/sosp-conference-day-1.html","retrieved":1635425940000},{"title":"Linearizability (Distributed Systems Blog)","contents":"Distributed/networked systems employ data replication to achieve availability and scalability. Consistency  is concerned with the question of what should happen if a client modifies some data items and concurrently another client reads or modifies the same items possibly at a different replica. Linearizability is a strong form of consistency. (That is why it is also called as strong-consistency.) For a system to satisfy linearizability,&nbsp; each operation must appear (from client perspective) to occur at an instantaneous point between its start time (when the client submits it) and finish time (when the client receives the response), and&nbsp; execution at these instantaneous points should form a valid sequential execution (i.e., it should be as if operations are executed one at a time ---without concurrency, like they are being executed by a single node)&nbsp; Let's simplify things further. In practice, consistency is often defined for systems that have two very specific operations: read and w","link":"https://muratbuffalo.blogspot.com/2021/10/linearizability.html","retrieved":1633572120000},{"title":"Using Lightweight Formal Methods to Validate a Key-Value Storage Node in Amazon S3 (SOSP21) (Distributed Systems Blog)","contents":"This paper  comes from my colleagues at AWS S3 Automated Reasoning Group, detailing their experience applying lightweight formal methods to a new class of storage node developed for S3 storage backend. Lightweight formal methods emphasize automation and usability.  In this case, the approach involves three prongs: developing executable reference models as specifications, checking implementation conformance to those models, and building infrastructure to ensure the models remain accurate in the future. ShardStore ShardStore is a new append-only key-value storage node developed for AWS S3 backend. It is over 40K lines of Rust code. Shardstore is a log-structured merge tree (LSM tree) but with shard data stored outside the tree to reduce write amplification. ShardStore employs soft updates for avoiding the cost of redirecting writes through a write-ahead log while still being crash consistent. A soft updates implementation ensures that only writes whose dependencies are persisted are sent","link":"https://muratbuffalo.blogspot.com/2021/10/using-lightweight-formal-methods-to.html","retrieved":1633215660000},{"title":"Book review: Fountainhead (Distributed Systems Blog)","contents":"I had been hearing a lot of negative comments about Fountainhead on Twitter. These comments seemed politically motivated, how the book is a dumb libertarian propaganda. I had to check the book out myself to see what the deal is.&nbsp; The book  started out well. I was surprised to see that, first this is a novel, and second this is an easy read. I was waiting an impenetrable intellectual literary text. The book turned out to readable and initially charming, even though it was written in 1940.&nbsp; The book felt like \"The Goal\" novel , communicating a concept/idea in story form. The main guy is this guy, Howard Roark, he is the best architect ever. Rather, he is the God of Architecture. He is architecture in flesh. He is like the best architect ever. The book is not at all subtle about this. He is 1000% dedicated to his craft, and he is the best ever, and he brings out his uncompromised gift in every building he designs. He is uncorruptable and willing to suffer for his art. The first","link":"https://muratbuffalo.blogspot.com/2021/09/book-review-fountainhead.html","retrieved":1632796380000},{"title":"Matchmaker Paxos: A Reconfigurable Consensus Protocol (Distributed Systems Blog)","contents":"Michael Whittaker , Joe Hellerstein's PhD student at UC Berkeley, has recently defended his PhD thesis on Compartmentalized Paxos . The thesis deconstructs Paxos and shows ways to reconstruct it to be more scalable by individually focusing on each component/role in Paxos. It is a simple but effective trick. Even after you learn the trick, you still keep getting surprised by how effective it is. When I say Michael defended his thesis, I am speaking loosely. Michael was not defensive about anything. He didn't have to be, his work spoke for him. Just watch his PhD presentation and you will understand what I mean. &nbsp;Michael has a great talent for explaining things simply. Unfortunately this is an underappreciated talent, especially in academia. This may make it look too easy and effortless, and like you didn't do sophisticated work. This dude did not even prepare presentation slides for his PhD thesis (the heresy!), and winged it on the fly by drawing his protocols on an iPad. H","link":"https://muratbuffalo.blogspot.com/2020/05/matchmaker-paxos-reconfigurable.html","retrieved":1630149180000},{"title":"There is plenty of room at the bottom (Distributed Systems Blog)","contents":"This is a pun on the saying \"there is always room at the top\". This is also the title of a famous Feynman lecture from 1959 , where he made a case for nanotechnology.&nbsp; In this post, I will try to argue that there is plenty of room at the bottom for distributed algorithms. Most work on distributed algorithms are done at a high-level abstraction plane. These high level solutions do not transfer well to the implementation level, and this opens a lot of space to explore at the implementation level. But this is not just an opportunistic argument. It is imperative to target the implementation level with our distributed algorithms work, otherwise they remain as theoretical, unused, inapplicable.&nbsp; Let me try to demonstrate using consensus protocols as examples. Someone else can make the same case using another subdomain. Be mindful of what is swept under the rug What is succinct at the high level could be very hard to implement and get right at the low level.  Paxos seems simple , bu","link":"https://muratbuffalo.blogspot.com/2021/08/there-is-plenty-of-room-at-bottom.html","retrieved":1629207300000},{"title":"Do tightly synchronized clocks help consensus? (Distributed Systems Blog)","contents":"Let's start with the impossibility results, a good place to start distributed systems discussion. The coordinated attack result  says that if the communication channels can drop messages arbitrarily and undetectably you cannot solve distributed consensus using a deterministic protocol in finite rounds. This result is all about *the curse of asymmetry of information*. Reliable channels are needed for two parties to agree on something. Otherwise the two parties are stuck in a Zeno's paradox of \"You may not know that I know that you know that I know\" kind of information chaining. A classic paper to checkout on the topic is \" Knowledge and common knowledge in a distributed environment \". Assuming mostly reliable channels and demanding majority acks, it is possible to solve consensus in a partially synchronous system. Paxos shows us how to do this.  Paxos uses quorum of acks to get around the problem of \"the agreement having to occur in one shot\" as in","link":"https://muratbuffalo.blogspot.com/2021/08/does-tightly-synchronized-clocks-help.html","retrieved":1628480400000},{"title":"Progress beats perfect (Distributed Systems Blog)","contents":"This is a favorite saying of mine. I use it to motivate myself when I feel disheartened about how much I have to learn and improve. If I do a little every day or every week, I will get there. If I get one percent better each day for one year, I'll end up thirty-seven times better by the end of the year. &nbsp; <span class=\"MathJax_Preview\" style=\"color: inherit; display: none;\"></span><span class=\"MathJax\" id=\"MathJax-Element-1-Frame\" tabindex=\"0\" style=\"position: relative;\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msup><mn>1.01</mn><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mn>365</mn></mrow></msup><mo>=</mo><mn>37.78</mn></math>\" role=\"presentation\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-1\" style=\"width: 7.958em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 6.509em; height: 0px; font-size: 122%;\"><span style=\"position: absolute; clip: rect(1.258em, 1006.47em, 2.433em, -1000em); top: -2.266em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-2\"><span class=\"msubsup\" id=\"MathJax-Span-3\"><span style=\"display: inline-block; position: relative; width: 2.914em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.191em, 1001.71em, 4.169em, -1000em); top: -4.002em; left: 0em;\"><span class=\"mn\" id=\"MathJax-Span-4\" style=\"font-family: MathJax_Main;\">1.01</span><span style=\"display: inline-block; width: 0px; height: 4.002em;\"></span></span><span style=\"position: absolute; top: -4.395em; left: 1.778em;\"><span class=\"texatom\" id=\"MathJax-Span-5\"><span class=\"mrow\" id=\"MathJax-Span-6\"><span class=\"mn\" id=\"MathJax-Span-7\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">365</span></span></span><span style=\"display: inline-block; width: 0px; height: 4.002em;\"></span></span></span></span><span class=\"mo\" id=\"MathJax-Span-8\" style=\"font-family: MathJax_Main; padding-left: 0.278em;\">=</span><span class=\"mn\" id=\"MathJax-Span-9\" style=\"font-family: MathJax_Main; padding-left: 0.278em;\">37.78</span></span><span style=\"display: inline-block; width: 0px; height: 2.266em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.086em; border-left: 0px solid; width: 0px; height: 1.198em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msup><mn>1.01</mn><mrow class=\"MJX-TeXAtom-ORD\"><mn>365</mn></mrow></msup><mo>=</mo><mn>37.78</mn></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-1\">1.01^{365}=37.78</script> Years ago I had read this idea in one of John Ousterhouts life lessons, and it stuck with me.&nbsp; \"A little bit of slope makes up for a lot of y-intercept\" Recently I noticed another advantage of progress over perfect. The emotional&nbsp; advantage. Progress is better because it makes you feel better as you see improvement. You are getting there, you are making ... progress. Progress is growth mindset . You have an opportunity ahead of you. Perfect feels bad.. It puts you on defense. You have to defend the perfect, you have to keep the appearances. You can only go downwards from perfect, or maintain status quo. Progress gives you momentum. As long as you manag","link":"https://muratbuffalo.blogspot.com/2021/08/progress-beats-perfect.html","retrieved":1628304480000},{"title":"2021-10-26: Error Messages in Relational Database Systems (Most Recent It Will Never Work in Theory)","contents":"When I was first introduced to SQL in my undergraduate database course, we were trained on an Oracle SQL instance. Taipalus2021 provides evidence that I may have been just a bit happier had we used PostgreSQL instead. Taipalus2021 studied how choice of database management system (DBMS) affected the effectiveness and subjective experience of novices when correcting SQL syntax errors. Overall, novices reported that the error messages produced by PostgreSQL and Microsoft SQL Server were more useful than error messages from MySQL, meanwhile Oracle's error messages were usually deemed the least useful—perhaps because its messages generally do a poor job of...","link":"https://neverworkintheory.org/2021/10/26/error-messages-in-relational-database-systems.html","retrieved":1635313014255},{"title":"Where Transcendental Numbers Hide in Everyday Math (Quanta: Mathematics)","contents":"The transcendental number <em>π</em> is as familiar as it is ubiquitous, but how does Euler’s number <em>e</em> transcend the ordinary?","link":"https://www.quantamagazine.org/where-transcendental-numbers-hide-in-everyday-math-20211027/","retrieved":1635356597556},{"title":"How Tadayuki Watanabe Disproved a Major Conjecture About Spheres (Quanta: Mathematics)","contents":"Watanabe invented a new way of distinguishing shapes on his way to solving the last open case of the Smale conjecture, a central question in topology about symmetries of the sphere.","link":"https://www.quantamagazine.org/how-tadayuki-watanabe-solved-a-topological-mystery-about-spheres-20211026/","retrieved":1635313018604},{"title":"How Wavelets Allow Researchers to Transform, and Understand, Data (Quanta: Mathematics)","contents":"Built upon the ubiquitous Fourier transform, the mathematical tools known as wavelets allow unprecedented analysis and understanding of continuous signals.","link":"https://www.quantamagazine.org/how-wavelets-allow-researchers-to-transform-and-understand-data-20211013/","retrieved":1634980795964},{"title":"Mathematicians Prove Melting Ice Stays Smooth (Quanta: Mathematics)","contents":"After decades of effort, mathematicians now have a complete understanding of the complicated equations that model the motion of free boundaries, like the one between ice and water.","link":"https://www.quantamagazine.org/mathematicians-prove-melting-ice-stays-smooth-20211006/","retrieved":1634980795965},{"title":"The Uselessness of Useful Knowledge (Quanta: Computer Science)","contents":"Today’s powerful but little-understood artificial intelligence breakthroughs echo past examples of unexpected scientific progress.","link":"https://www.quantamagazine.org/science-has-entered-a-new-era-of-alchemy-good-20211020/","retrieved":1634980801063},{"title":"Neuron Bursts Can Mimic Famous AI Learning Strategy (Quanta: Computer Science)","contents":"A new model of learning centers on bursts of neural activity that act as teaching signals — approximating backpropagation, the algorithm behind learning in AI.","link":"https://www.quantamagazine.org/brain-bursts-can-mimic-famous-ai-learning-strategy-20211018/","retrieved":1634980801064},{"title":"A New Link to an Old Model Could Crack the Mystery of Deep Learning (Quanta: Computer Science)","contents":"To help them explain the shocking success of deep neural networks, researchers are turning to older but better-understood models of machine learning.","link":"https://www.quantamagazine.org/a-new-link-to-an-old-model-could-crack-the-mystery-of-deep-learning-20211011/","retrieved":1634980801066},{"title":"Major Quantum Computing Strategy Suffers Serious Setbacks (Quanta: Computer Science)","contents":"So-called topological quantum computing would avoid many of the problems that stand in the way of full-scale quantum computers. But high-profile missteps have led some experts to question whether the field is fooling itself.","link":"https://www.quantamagazine.org/major-quantum-computing-strategy-suffers-serious-setbacks-20210929/","retrieved":1634980801067},{"title":"Is the Great Neutrino Puzzle Pointing to Multiple Missing Particles? (Quanta: Physics)","contents":"Years of conflicting neutrino measurements have led physicists to propose a “dark sector” of invisible particles — one that could simultaneously explain dark matter, the puzzling expansion of the universe, and other mysteries.","link":"https://www.quantamagazine.org/neutrino-puzzles-point-to-the-possibility-of-multiple-missing-particles-20211028/","retrieved":1635444160437},{"title":"An Ultra-Precise Clock Shows How to Link the Quantum World With Gravity (Quanta: Physics)","contents":"Time was found to flow differently between the top and bottom of a single cloud of atoms. Physicists hope that such a system will one day help them combine quantum mechanics and Einstein’s theory of gravity.","link":"https://www.quantamagazine.org/an-atomic-clock-promises-link-between-quantum-world-and-gravity-20211025/","retrieved":1635313028257},{"title":"The Uselessness of Useful Knowledge (Quanta: Physics)","contents":"Today’s powerful but little-understood artificial intelligence breakthroughs echo past examples of unexpected scientific progress.","link":"https://www.quantamagazine.org/science-has-entered-a-new-era-of-alchemy-good-20211020/","retrieved":1634980801063},{"title":"A Hint of Dark Matter Sends Physicists Looking to the Skies (Quanta: Physics)","contents":"After a search of neutron stars finds preliminary evidence for hypothetical dark matter particles called axions, astrophysicists are devising new ways to spot them.","link":"https://www.quantamagazine.org/a-hint-of-dark-matter-sends-physicists-looking-to-the-skies-20211019/","retrieved":1634980806083}]}